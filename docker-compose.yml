version: "3.8"
services:
  db:
    container_name: postgres
    image: postgres:alpine
    hostname: postgres
    #healthcheck:
    #  test: pg_isready -U postgres -h localhost
    #  interval: 5s
    #  timeout: 5s
    #  retries: 10
    restart: unless-stopped
    environment:
      #PGPORT: ${POSTGRES_PORT}
      #POSTGRES_PORT: ${POSTGRES_PORT}
      PGPASSWORD: postgres #${POSTGRES_PASSWORD}
      POSTGRES_PASSWORD: postgres #${POSTGRES_PASSWORD}
      PGDATABASE: postgres #${POSTGRES_DB}
      POSTGRES_DB: postgres #${POSTGRES_DB}
    volumes:
      - ./postgres/:/var/lib/postgresql/data:rw

  rest:
    container_name: postgrest
    image: postgrest/postgrest
    depends_on:
      - db #condition: service_healthy
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/items
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: postgres
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000

  swagger:
    container_name: swagger
    image: swaggerapi/swagger-ui
    depends_on:
      - rest
    ports:
      - 8082:8080
    environment:
      - API_URL=http://192.168.1.15:3000/

  panel:
    container_name: adminer
    image: adminer
    ports:
      - 8081:8080
    environment:
      - ADMINER_DESIGN=dracula
